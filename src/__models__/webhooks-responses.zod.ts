// Generated by ts-to-zod
import { z } from 'zod'

export const createAssetsWebhookResultSchema = z.object({
  id: z.string(),
})

export const getWorkflowWebhookResultSchema = z.object({
  event: z
    .union([
      z.literal('DELIVERABLE_STATUS_CHANGED'),
      z.literal('PROJECT_CREATED'),
    ])
    .optional(),
  target: z.string(),
})

export const getAssetsWebhookResultSchema = z.object({
  created_by_user: z.object({
    uuid: z.string(),
  }),
  created_date: z.date(),
  delivery_enabled: z.boolean(),
  event_type: z.string(),
  last_delivered_date: z.date().nullable(),
  last_pinged_date: z.date().nullable(),
  signing_enabled: z.boolean(),
  webhook_configuration_id: z.string(),
})

export const listWorkflowWebhooksResultSchema = z.object({
  items: z.array(getWorkflowWebhookResultSchema),
})

export const assetsWebhookSchema = getAssetsWebhookResultSchema

export const workflowWebhookSchema = getWorkflowWebhookResultSchema

export const listAssetsWebhooksResultSchema = z.object({
  item_type: z.string(),
  items: z.array(getAssetsWebhookResultSchema),
  limit: z.number(),
  offset: z.number(),
  total_count: z.number(),
})
